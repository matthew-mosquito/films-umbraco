@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using umbraco.cms.businesslogic.Tags
@{
    Layout = null;
}

<!-- set variables for pagination -->
@{

    <!-- How many items per page-->
    var pageSize = 1;

    <!-- which page requested, what was the search-->
    var pageRequested = !string.IsNullOrEmpty(Request.QueryString["page"]) ? Convert.ToInt32(Request.QueryString["page"]) : 1;
    var query = !string.IsNullOrEmpty(Request.QueryString["query"]) ? Request.QueryString["query"] : "";

    <!-- calculate the number of items to be skipped -->
    var skip = (pageRequested - 1) * pageSize;

    <!-- set numOfPageLinks as a global variable -->
    int numOfPageLinks;
    var selection = Model.Content.Site().FirstChild("pageContent").FirstChild("filmSection").Children()
            .Where(x => x.IsVisible());
}

<!-- Search field and submit button -->
<div class="mb-2">
    <form action="@Model.Content.Url" method="get">
        <input type="text" class="form-control-sm" placeholder="Search" id="query" name="query" />
        <button class="btn btn-primary">Search</button>
    </form>
</div>

<!-- Table displaying the results of the search, if there is no search, display all films -->
@{
    <table class="table mt-2">
        <tr>
            <th>Name</th>
            <th>Rating</th>
            <th>Duration</th>
        </tr>

        @if (!string.IsNullOrEmpty(Request.QueryString["query"]))
        {
            var results = Umbraco.TypedSearch(Request.QueryString["query"]);

            var pagedResult = new PagedResult<IPublishedContent>(results.LongCount(), pageRequested, pageSize)
            {
                Items = results.Skip(skip).Take(pageSize).ToList()
            };

            numOfPageLinks = (int)Math.Ceiling((float)results.Count() / (float)pageSize);

            foreach (var result in pagedResult.Items)
            {
                foreach (var item in selection)
                {
                    if (result.Name == item.Name)
                    {
                        <tr>
                            <td>@item.GetPropertyValue("filmName")</td>
                            <td>@item.GetPropertyValue("rating")</td>
                            <td>@item.GetPropertyValue("duration")</td>
                        </tr>
                    }
                }
            }
        }
        else
        {
            var Items = selection.Skip(skip).Take(pageSize).ToList();

            numOfPageLinks = (int)Math.Ceiling((float)selection.Count() / (float)pageSize);

            foreach (var item in Items)
            {
                <tr>
                    <td> @item.GetPropertyValue("filmName") </td>
                    <td> @item.GetPropertyValue("rating") </td>
                    <td> @item.GetPropertyValue("duration") </td>
                </tr>
            }
        }
    </table>

    <ul class="pagination">
        @for (int i = 1; i < numOfPageLinks + 1; i++)
        {
            <li class="page-item"><a class="page-link" href="/?query=@query&page=@i">@i</a></li>
        }
    </ul>
}