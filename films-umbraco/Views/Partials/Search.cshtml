@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    Layout = null;
}


@{
    var selection = Model.Content.Site().FirstChild("pageContent").Children()
                        .Where(x => x.IsVisible());
}
<ul>
    @foreach (var item in selection)
    {
        <li>
            <a href="@item.Url">@item.Name</a>
        </li>
    }
</ul>

<div class="mb-2">
    <form action="@Model.Content.Url" method="get">
        <input type="text" placeholder="Search" id="query" name="query" />
        <button class="btn btn-primary">Search</button>
    </form>
</div>

<div>
    @{
        var searchTerm = string.Empty;
        searchTerm = string.IsNullOrEmpty(Request["query"])
            ? string.Empty
            : Request["query"];
        if (searchTerm == string.Empty)
        {
            <p>Enter search term</p>
        }
        else
        {
            @*
                //perform the search
                //first we try to get the index, it is the ExternalIndex as we don't want to return unpublished things
                //it returns the index in the var index
                if (ExamineManager.Instance.TryGetIndex("ExternalIndex", out var index))
                {
                    var searcher = index.GetSearcher();
                    var results = searcher.CreateQuery("content").NodeTypeAlias("person").And().Field("nodeName", searchTerm).Execute();
                    var results = searcher.CreateQuery("content").ParentID(1096).Field("Name", searchTerm).Execute();

                    if (results.Any())
                    {
                        <ul>
                            @foreach (var result in results)
                            {
                                if (result.Id != null)
                                {
                                    var node = Umbraco.Content(result.Id);
                                    <li>
                                        <a href="@node.Url">@node.Name</a>
                                    </li>
                                }
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No results found for query @searchTerm</p>
                    }
            *@
        }
        return;
    }
    }
</div>
